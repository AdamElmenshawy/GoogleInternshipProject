{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/adamelmenshawy/Documents/GitHub/GoogleInternshipProject/asb-app/src/pages/dashboard/%5Bmonth%5D.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n  Box,\n  Grid,\n} from \"@mui/material\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n// import { getDataByMonth } from \"../../data/dataProvider\"; // Adjust the import based on your data source\n\n// Register Chart.js components\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Dashboard = ({ monthData, monthName }) => {\n  const chartRef = React.useRef(null);\n\n  const chartData = {\n    labels: [\"Critical\", \"High\", \"Medium\", \"Low\"],\n    datasets: [\n      {\n        data: [30, 50, 15, 5], // Example data, replace with actual data\n        backgroundColor: [\"#FF5733\", \"#FF8C00\", \"#FFEB3B\", \"#4CAF50\"],\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: \"top\",\n      },\n    },\n  };\n\n  return (\n    <Box p={3}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        {monthName} Vulnerabilities\n      </Typography>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={8}>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell><strong>CVE</strong></TableCell>\n                  <TableCell><strong>References</strong></TableCell>\n                  <TableCell><strong>Type</strong></TableCell>\n                  <TableCell><strong>Severity</strong></TableCell>\n                  <TableCell><strong>Updated AOSP Versions</strong></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {monthData.map((row) => (\n                  <TableRow key={row.cve}>\n                    <TableCell>{row.cve}</TableCell>\n                    <TableCell>{row.references}</TableCell>\n                    <TableCell>{row.type}</TableCell>\n                    <TableCell>{row.severity}</TableCell>\n                    <TableCell>{row.versions || row.subcomponent}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Box display=\"flex\" justifyContent=\"center\" mb={4}>\n            <Box width=\"100%\">\n              <Pie ref={chartRef} data={chartData} options={chartOptions} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <Box mt={4}>\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          AI Overview\n        </Typography>\n        <Typography variant=\"body1\">\n          This section provides an overview of the AI analysis and insights.\n          You can add more detailed information here based on your specific requirements.\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport async function getStaticPaths() {\n  const months = [\"2024-01\", \"2024-02\", \"2024-03\", \"2024-04\", \"2024-05\", \"2024-06\", \"2024-07\", \"2024-08\", \"2024-09\", \"2024-10\", \"2024-11\", \"2024-12\"];\n  const paths = months.map((month) => ({\n    params: { month },\n  }));\n\n  return { paths, fallback: false };\n}\n\nexport async function getStaticProps({ params }) {\n  const monthData = [\n    {\n      cve: \"CVE-2024-43762\",\n      references: \"A-340239088\",\n      type: \"EoP\",\n      severity: \"High\",\n      versions: \"12, 12L, 13, 14, 15\",\n    },\n    {\n      cve: \"CVE-2024-43764\",\n      references: \"A-317048495\",\n      type: \"EoP\",\n      severity: \"High\",\n      versions: \"13, 14\",\n    },\n    {\n      cve: \"CVE-2024-43769\",\n      references: \"A-360807442\",\n      type: \"EoP\",\n      severity: \"High\",\n      versions: \"13, 14, 15\",\n    },\n  ]; \n//   getDataByMonth(params.month); // Fetch data based on the month\n  const monthName = new Date(params.month + \"-01\").toLocaleString('default', { month: 'long', year: 'numeric' });\n\n  return { props: { monthData, monthName } };\n}\n\nexport default Dashboard;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}